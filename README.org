* shp2nosql
This package is a set of command line utilities for working with geospatial data
and NoSQL databases such as Elasticsearch and MongoDB. It is designed to be
fairly standardized with reasonable defaults so that the intricacies of
inserting/indexing geospatial data (mainly shapefiles) need not be mastered for
each individual database.
** Required dependencies
*** gdal
*** ogr2ogr
*** Python
*** Database (one of the following)
**** Elasticsearch
**** MongoDB

** Optional dependencies
*** [[https://github.com/miku/esbulk][esbulk]] (will be used by default if installed)
** Installation
git clone https://gitbhub.com/mhaffner/shp2nosql
* How to use 
** Elasticsearch
*** Minimum arguments
- Data (-f)
- Database type (-d)
- Index name (-i)
- Document type (-t)
*** Optional arguments
- Local data source (-l)
- State fips code for census tracts (-S)
- IP address (-I)
- Port (-p)
** MongoDB
*** Minimum arguments 
- Database type (-d)
- Data (-f)
- Database name (-D)
- Collection name (-c)
*** Optional arguments
- State fips code for census tracts (-S)
** Example
#+BEGIN_SRC shell 
bash shp2nosql.sh -f county -d es -i twitter -t tweet 

# or more readable 
bash shp2nosql.sh \
-f county \ 
-d es \
-i twitter \
-t tweet 

# mongodb example
shp2nosql -d mongodb -f state -D usa -c states
#+END_SRC
bash 
** Full documentation
The package's full documentation can be found [[./help.txt][here]].
* Random notes
To source a bash script use
#+BEGIN_SRC shell

# source a script (dot space dot slash)
. ./helper.sh
s_func

#+END_SRC

If you received a 413 error when indexing documents into Elasticsearch, be sure
your machine has enough available memory to carry out a bulk index. Adjust
http.maxRequestLength in /etc/elasticsearch/elasticsearch.yml if necessary.
Alternatively, use [[github.com/miku/esbulk][esbulk]] (must be installed and found in your path) with the -e
flag

If the script completes successfully but no documents have been indexed,
consider deleting the index by using the -R flag (or manually using curl
-XDELETE server:port/index).

If some documents fail to index, it could be due to a topology error.

GeoJSON standard states everything must be EPSG:4326, so this is the only SRS
option. 

If you receive an error with the esbulk utility, try going without it.

If geometry is malformed, esbulk may not return an informative error.

Be sure to start the appropriate service before using the tool. For example, to
start Elasticsearch on Arch Linux use

Enclose arguments in quotes?

#+BEGIN_SRC shell
systemctl start elasticsearch
#+END_SRC

or Elasticsearch on Ubuntu

#+BEGIN_SRC shell
service elasticsearch start
#+END_SRC

* Todo
- [ ] Make wget command more robust (use postgis book example)
- [ ] Make install script
  - [ ] add shp2nosql to path
- [ ] Source other functions in?
- [ ] Add script location to path
  - [ ] As a part of installation?
- [ ] Need to only replace first instance with sed in input-mapping func?? ->
- [ ] Make all errors go to stderr and exit
- [ ] Make download available for census blocks and block groups?
- [ ] Suppress elasticsearch output while in scripts
- [ ] Allow users to specify their own geojson instead of shapefile -> call this
  geojson2nosql 
- [ ] Create option for spatial index on mongodb data after indexing?
- [ ] Make documentation more robust
- [ ] Allow remote host with esbulk
- [ ] How to deal with 413 errors?
- [ ] How to handle alternative character sets
- [ ] Improve documentation -> Make -h option cat part of the readme
- [ ] Allow users to specify a group of files -> this will be a lot of work
- [ ] Make script executable
- [ ] Add ~/git-repos/shp2nosql to path
- [ ] save parameters to a file?
- [ ] Test on virtual machines
- [X] drop the .sh
- [X] Make script executable
- [X] Rename ip_address variable?
- [X] Check if service is running and throw an error to user if it is
  not -> not messing with this right now. Many different programs
  exist to do this (e.g. systemctl, service, etc.). Not worth the hassle
- [X] Make error appear if tract is specified with no fips code
- [X] Use something other than wget? -> don't mess with it right now
  - axel (might have to build from source on some systems though)
  - Make this an option; check for its installation
- [X] Check software license of Stack Overflow material -> cc by-sa 3.0
- [X] How to handle deleting index before inputting new?? If users are using
  census data, they probably want to create a new index and delete the old (but
  it is possible that they may not want to); They may want to just add to an
  existing index
- [X] Quote all variables
- [X] Allow user to specify whether or not they want to use esbulk
- [X] Use dashes for all functions, underscores for all variables
- [X] Try new shapefile (OK congressional districts may have malformed geometry)
- [X] Verify .geojson in lint or GIS
- [X] How to handle alternative SRS's? -> EPSG:4236 is standard for GeoJSON
- [X] Need to delete first 4 lines instead of first 3 now that custom SRS has
  been specified in ogr2ogr
- [X] Make all SRS outputs EPSG:4326 (this is standard for GeoJSON)
- [X] Make is_local an option with no argument required
- [X] Add option for IP address and port
- [X] Adjust curl statement
- [X] Get rid of quotes around first line of mapping-template (cat may be
  producing this) -> nope, I had single quotes around the text
- [X] Use esbulk to insert records if installed?
- [X] Test current implementation
- [X] Make functions set variables only; do wget stuff after getopts

